// --- START OF FILE src/character/level0/CharacterGraphics_L0.h ---
#ifndef CHARACTER_GRAPHICS_L0_H
#define CHARACTER_GRAPHICS_L0_H

#ifdef ARDUINO_ARCH_AVR
#include <avr/pgmspace.h>
#elif defined(ESP32)
#include <pgmspace.h>
#else
#define PROGMEM
#endif

// --- Character Constants ---
#define CHARACTER_WIDTH 32
#define CHARACTER_HEIGHT 32 // Standard height for most states


// --- Egg Bitmaps ---

// 'Oeuf-static', 32x32px (Keep this for idle state)
const unsigned char bmp_Oeuf_static[] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x80, 0x03, 0x00, 0x00, 0xe0, 0x0f, 0x00, 0x00, 0x30, 0x18, 0x00, 0x00, 0x18, 0x30, 0x00,
	0x00, 0x0c, 0x60, 0x00, 0x00, 0x26, 0xc0, 0x00, 0x00, 0x33, 0x80, 0x00, 0x00, 0x11, 0x80, 0x01,
	0x80, 0x01, 0x00, 0x01, 0x80, 0x08, 0x00, 0x03, 0x80, 0x0c, 0x00, 0x02, 0x80, 0x04, 0x00, 0x02,
	0x80, 0x04, 0x00, 0x02, 0x80, 0x04, 0x00, 0x02, 0x80, 0x04, 0x00, 0x02, 0x80, 0x00, 0x00, 0x02,
	0x80, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00, 0x01, 0x00, 0x03, 0x80, 0x01, 0x00, 0x02, 0xc0, 0x00,
	0x00, 0x06, 0x60, 0x00, 0x00, 0x0c, 0x30, 0x00, 0x00, 0x38, 0x1c, 0x00, 0x00, 0xe4, 0x27, 0x00,
	0x00, 0x02, 0x40, 0x00, 0x00, 0xfc, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

// --- Downing Sprite Sheet ---
#define DOWNING_SPRITESHEET_WIDTH 32
#define DOWNING_SPRITESHEET_HEIGHT 128
#define DOWNING_FRAME_WIDTH 32
#define DOWNING_FRAME_HEIGHT 32
#define DOWNING_FRAME_COUNT 4
#define DOWNING_FRAME_DURATION_MS 200
#define DOWNING_BYTES_PER_FRAME ((DOWNING_FRAME_WIDTH + 7) / 8 * DOWNING_FRAME_HEIGHT)

const unsigned char epd_bitmap_Oeuf_Downing [] PROGMEM = { /* ... data ... */
	// Frame 0 (0-127)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x80, 0x03, 0x00, 0x00, 0xe0, 0x0f, 0x00, 0x00, 0x30, 0x18, 0x00, 0x00, 0x18, 0x30, 0x00,
	0x00, 0x0c, 0x60, 0x00, 0x00, 0x26, 0xc0, 0x00, 0x00, 0x33, 0x80, 0x00, 0x00, 0x11, 0x80, 0x01,
	0x80, 0x01, 0x00, 0x01, 0x80, 0x08, 0x00, 0x03, 0x80, 0x0c, 0x00, 0x02, 0x80, 0x04, 0x00, 0x02,
	0x80, 0x04, 0x00, 0x02, 0x80, 0x04, 0x00, 0x02, 0x80, 0x04, 0x00, 0x02, 0x80, 0x00, 0x00, 0x02,
	0x80, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00, 0x01, 0x00, 0x03, 0x80, 0x01, 0x00, 0x02, 0xc0, 0x00,
	0x00, 0x06, 0x60, 0x00, 0x00, 0x0c, 0x30, 0x00, 0x00, 0x38, 0x1c, 0x00, 0x00, 0xe4, 0x27, 0x00,
	0x00, 0x02, 0x40, 0x00, 0x00, 0xfc, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	// Frame 1 (128-255)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x0f, 0x00,
	0x00, 0x30, 0x18, 0x00, 0x00, 0x18, 0x30, 0x00, 0x00, 0x0c, 0x60, 0x00, 0x00, 0x26, 0x40, 0x00,
	0x00, 0x32, 0xc0, 0x00, 0x00, 0x13, 0x80, 0x01, 0x80, 0x01, 0x00, 0x03, 0x80, 0x08, 0x00, 0x02,
	0xc0, 0x0c, 0x00, 0x06, 0x40, 0x04, 0x00, 0x04, 0x40, 0x04, 0x00, 0x04, 0x40, 0x04, 0x00, 0x04,
	0x40, 0x00, 0x00, 0x04, 0x40, 0x00, 0x00, 0x02, 0x80, 0x00, 0x00, 0x01, 0x00, 0x01, 0x80, 0x00,
	0x00, 0x02, 0x40, 0x00, 0x00, 0x04, 0x20, 0x00, 0x00, 0x0c, 0x30, 0x00, 0x00, 0xf2, 0x4f, 0x00,
	0x00, 0x01, 0x80, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	// Frame 2 (256-383)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x07, 0x00, 0x00, 0x70, 0x9c, 0x00, 0x00, 0x18, 0x30, 0x01,
	0x00, 0x0c, 0x60, 0x04, 0x00, 0x06, 0xc0, 0x08, 0x00, 0x33, 0x80, 0x01, 0x80, 0x11, 0x00, 0x03,
	0xc0, 0x00, 0x00, 0x06, 0x40, 0x06, 0x00, 0x0c, 0x60, 0x02, 0x00, 0x08, 0x20, 0x02, 0x00, 0x08,
	0x20, 0x02, 0x00, 0x08, 0x20, 0x00, 0x00, 0x0c, 0x60, 0x00, 0x00, 0x06, 0xc0, 0x00, 0x00, 0x03,
	0x80, 0x03, 0x80, 0x01, 0x20, 0x06, 0xe0, 0x00, 0x40, 0x0c, 0x30, 0x00, 0x00, 0xf2, 0x4f, 0x00,
	0x00, 0x01, 0x80, 0x00, 0x80, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    // Frame 3 (384-511)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x0f, 0x00,
	0x00, 0x30, 0x18, 0x00, 0x00, 0x18, 0x30, 0x00, 0x00, 0x0c, 0x60, 0x00, 0x00, 0x26, 0x40, 0x00,
	0x00, 0x32, 0xc0, 0x00, 0x00, 0x13, 0x80, 0x01, 0x80, 0x01, 0x00, 0x03, 0x80, 0x08, 0x00, 0x02,
	0xc0, 0x0c, 0x00, 0x06, 0x40, 0x04, 0x00, 0x04, 0x40, 0x04, 0x00, 0x04, 0x40, 0x04, 0x00, 0x04,
	0x40, 0x00, 0x00, 0x04, 0x40, 0x00, 0x00, 0x02, 0x80, 0x00, 0x00, 0x01, 0x00, 0x01, 0x80, 0x00,
	0x00, 0x02, 0x40, 0x00, 0x00, 0x04, 0x20, 0x00, 0x00, 0x0c, 0x30, 0x00, 0x00, 0xf2, 0x4f, 0x00,
	0x00, 0x01, 0x80, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};


// 'Oeuf-snooze1', 32x32px
const unsigned char bmp_Oeuf_snooze1[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x80, 0x63, 0x00, 0x00, 0xe0, 0xcf, 0x00, 0x00, 0x30, 0x98, 0x01, 0x00, 0x18, 0x30, 0x03,
    0x00, 0x0c, 0x60, 0x02, 0x00, 0x26, 0xc0, 0x04, 0x00, 0x33, 0x80, 0x0c, 0x00, 0x11, 0x80, 0x09,
    0x80, 0x01, 0x00, 0x01, 0x80, 0x08, 0x00, 0x03, 0x80, 0x0c, 0x00, 0x02, 0x80, 0x04, 0x00, 0x02,
    0x80, 0x04, 0x00, 0x02, 0x80, 0x04, 0x00, 0x02, 0x80, 0x04, 0x00, 0x02, 0x80, 0x00, 0x00, 0x02,
    0x80, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00, 0x01, 0x00, 0x03, 0x80, 0x01, 0x00, 0x02, 0xc0, 0x00,
    0x00, 0x06, 0x60, 0x00, 0x00, 0x0c, 0x30, 0x00, 0x00, 0x38, 0x1c, 0x00, 0x00, 0xe4, 0x27, 0x00,
    0x00, 0x02, 0x40, 0x00, 0x00, 0xfc, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

// 'Oeuf-snooze2', 32x32px
const unsigned char bmp_Oeuf_snooze2[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x80, 0x63, 0x00, 0x00, 0xe0, 0xcf, 0x00, 0x00, 0x30, 0x98, 0x01, 0x00, 0x18, 0x30, 0x03,
    0x00, 0x0c, 0x60, 0x02, 0x00, 0x26, 0xc0, 0x04, 0x00, 0x33, 0x80, 0x0c, 0x00, 0x11, 0x80, 0x09,
    0x80, 0x01, 0x00, 0x01, 0x80, 0x08, 0x00, 0x03, 0x80, 0x0c, 0x00, 0x02, 0x80, 0x04, 0x00, 0x02,
    0x80, 0x04, 0x00, 0x02, 0x80, 0x04, 0x00, 0x02, 0x80, 0x04, 0x00, 0x02, 0x80, 0x00, 0x00, 0x02,
    0x80, 0x01, 0x00, 0x03, 0x30, 0x01, 0x00, 0x01, 0x20, 0x03, 0x80, 0x01, 0x60, 0x02, 0xc0, 0x00,
    0xc0, 0x06, 0x60, 0x00, 0x80, 0x0c, 0x30, 0x00, 0x80, 0x39, 0x1c, 0x00, 0x00, 0xe4, 0x27, 0x00,
    0x00, 0x02, 0x40, 0x00, 0x00, 0xfc, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

// --- Flying Entity Sprites (Animated 10x10, 2 frames) ---
#define FLYING_FRAME_WIDTH 10
#define FLYING_FRAME_HEIGHT 10
#define FLYING_FRAME_COUNT 2
#define FLYING_BYTES_PER_FRAME ((FLYING_FRAME_WIDTH + 7) / 8 * FLYING_FRAME_HEIGHT) // = 2 * 10 = 20 bytes
#define FLYING_FRAME_DURATION_MS 150

const unsigned char epd_bitmap_Bee_flying [] PROGMEM = { /* ... data ... */
	0xfc, 0x01, 0x02, 0x02, 0x04, 0x01, 0x88, 0x00, 0xfc, 0x01, 0x02, 0x02,
	0x01, 0x02, 0x01, 0x02, 0x02, 0x02, 0xfc, 0x01,                         // Frame 0 end
    0x00, 0x00, 0x00, 0x00,                                                 // Frame 1 start (Example - second bee frame)
	0xfc, 0x01, 0x88, 0x00, 0xfc, 0x01, 0x02, 0x02,
	0x01, 0x02, 0x01, 0x02, 0x02, 0x02, 0xfc, 0x01                          // Frame 1 end
};
const unsigned char epd_bitmap_butterfly_flying [] PROGMEM = { /* ... data ... */
	0x48, 0x00, 0x32, 0x01, 0xfd, 0x02, 0x31, 0x02, 0x31, 0x02, // Frame 0
	0x31, 0x02, 0x31, 0x02, 0x7a, 0x01, 0xb4, 0x00, 0x30, 0x00, // Frame 0 end
    0x48, 0x00, 0x30, 0x00,                                     // Frame 1 start
	0xfc, 0x00, 0xb4, 0x00, 0xb4, 0x00, 0xb4, 0x00,
	0xb4, 0x00, 0xfc, 0x00, 0xb4, 0x00, 0x30, 0x00              // Frame 1 end
};
const unsigned char epd_bitmap_spacial_flying [] PROGMEM = { /* ... data ... */
	0x00, 0x00, 0x78, 0x00, 0xcc, 0x00, 0x84, 0x00, 0x02, 0x01, // Frame 0
	0x55, 0x02, 0xfe, 0x01, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00, // Frame 0 end
    0x00, 0x00, 0x78, 0x00,                                     // Frame 1 start
	0xcc, 0x00, 0x84, 0x00, 0x02, 0x01, 0xa9, 0x02,
	0xfe, 0x01, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00              // Frame 1 end
};

// --- Sickness Overlays (32x38) ---
#define SICKNESS_OVERLAY_WIDTH 32
#define SICKNESS_OVERLAY_HEIGHT 38

// 'Cold', 32x38px
const unsigned char epd_bitmap_Cold [] PROGMEM = {
	0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x40, 0x05, 0x40, 0x00, 0x80, 0x03, 0x40, 0x00, 0x40, 0x05, 
	0x80, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x1c, 
	0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x4c, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

// 'Diarrhea', 32x38px
const unsigned char epd_bitmap_Diarrhea [] PROGMEM = { /* ... data ... */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
	0x80, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
	0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
	0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00,
	0x1f, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // Padding byte assumed
};
// 'HeadHache', 32x38px
const unsigned char epd_bitmap_HeadHache [] PROGMEM = { /* ... data ... */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x30, 0x00,
	0x00, 0x08, 0x08, 0x00, 0x00, 0x08, 0x10, 0x00, 0x00, 0x38, 0x20, 0x00, 0x00, 0x20, 0x10, 0x00,
	0x00, 0x20, 0x08, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // Padding byte assumed
};
// 'Hot', 32x38px
const unsigned char epd_bitmap_Hot [] PROGMEM = { /* ... data ... */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x02, 0x00, 0x00, 0x24, 0x01, 0x00,
	0x00, 0x24, 0x01, 0x00, 0x00, 0x24, 0x01, 0x00, 0x00, 0x48, 0x02, 0x00, 0x00, 0x48, 0x02, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00,
	0x30, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // Padding byte assumed
};


#endif // CHARACTER_GRAPHICS_L0_H
// --- END OF FILE src/character/level0/CharacterGraphics_L0.h ---
